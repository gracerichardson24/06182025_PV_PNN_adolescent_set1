---
title: "GR_analysis_06182025"
format: html
---

```{r}
#| label: packages and data:

#packages for statistical analysis
if(!require(lsmeans)){install.packages("lsmeans")}
if(!require(multcompView)){install.packages("multcompView")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(rcompanion)){install.packages("ggprism")}

library(tidyverse)
library(stringr)
library(car)
library(FSA)
library(ggpubr)
library(ggbeeswarm)
library(ggprism)
library(ragg)
```

```{r}
#| label: reading in CSV files

Image_data = read.csv("DATA/Summary_WT+KO.csv")
```

```{r}

modelPV = lm(`Green.Puncta.Count` ~ Condition * Genotype * Side,
           data = Image_data)
summary(modelPV)

Anova(modelPV,
      type = "III")
```

```{r}
modelWFA = lm(`Red.Puncta.Count` ~ Condition * Genotype * Side,
           data = Image_data)
summary(modelWFA)

Anova(modelWFA,
      type = "III")
```

```{r}
Image_data |>
  ggplot(aes(x = Genotype, y = Colocalized.Puncta.Count)) +
  geom_col()
  
```

#### WFA DATA

```{r}
# Create summary data
summary_df_WFA <- Image_data %>%
  group_by(Condition, Genotype, Side) %>%
  summarise(MeanCount = mean(Red.Puncta.Count, na.rm = TRUE), .groups = "drop") %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

# Add group label to raw data
Image_data <- Image_data %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

label_map <- c(
  "MD_KO_Contralateral" = "Contralateral",
  "MD_KO_Ipsilateral" = "Ipsilateral",
  "MD_WT_Contralateral" = "Contralateral",
  "MD_WT_Ipsilateral" = "Ipsilateral",
  "NR_KO_Contralateral" = "Contralateral",
  "NR_KO_Ipsilateral" = "Ipsilateral",
  "NR_WT_Contralateral" = "Contralateral",
  "NR_WT_Ipsilateral" = "Ipsilateral"
)

# Plot
ggplot() +
  # Bar chart for group means
  geom_col(data = summary_df_WFA, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +

  # Jitter for individual points
  geom_jitter(data = Image_data, aes(x = Group, y = Red.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +

  theme_minimal() +
  xlab(" ") +
  ylab("WFA+ Puncta Count") +
  labs(title = "WFA+ puncta count in V1 across \n experimental conditions") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  scale_x_discrete(labels = label_map) +
  scale_y_continuous(limits = c(0, 140), expand = expansion(mult = c(0, 0.05)))
```

```{r}

summary_df_WFA <- Image_data %>%
  group_by(Condition, Genotype, Side) %>%
  summarise(MeanCount = mean(Red.Puncta.Count, na.rm = TRUE), .groups = "drop") %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

group_levels <- levels(factor(summary_df_WFA$Group))

# Manually set bracket positions based on group order
# Assuming order is: MD_KO_Contralateral, MD_KO_Ipsilateral, MD_WT_Contralateral, MD_WT_Ipsilateral,
#                   NR_KO_Contralateral, NR_KO_Ipsilateral, NR_WT_Contralateral, NR_WT_Ipsilateral

label_map <- c(
  "MD_KO_Contralateral" = "Contralateral",
  "MD_KO_Ipsilateral" = "Ipsilateral",
  "MD_WT_Contralateral" = "Contralateral",
  "MD_WT_Ipsilateral" = "Ipsilateral",
  "NR_KO_Contralateral" = "Contralateral",
  "NR_KO_Ipsilateral" = "Ipsilateral",
  "NR_WT_Contralateral" = "Contralateral",
  "NR_WT_Ipsilateral" = "Ipsilateral"
)

p <- ggplot() +
  geom_col(data = summary_df_WFA, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +
  geom_jitter(data = Image_data, aes(x = Group, y = Red.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  xlab(" ") +
  ylab("WFA+ Puncta Count") +
  labs(title = "WFA+ puncta count in V1 in monocular deprived (MD) \n and normal reared (NR) animals") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = label_map) +
  scale_y_continuous(limits = c(-20, 140), expand = expansion(mult = c(0, 0.05))) +  # extra room on left

  # Bracket for "MD"
  geom_segment(aes(x = 0.7, xend = 4.3, y = -5, yend = -5)) +     # horizontal bracket line
  geom_segment(aes(x = 0.7, xend = 0.7, y = -5, yend = 0)) +      # left vertical line
  geom_segment(aes(x = 4.3, xend = 4.3, y = -5, yend = 0)) +      # right vertical line
  annotate("text", x = 2.5, y = -10, label = "MD", size = 4) +    # label

  # Bracket for "NR"
  geom_segment(aes(x = 4.7, xend = 8.3, y = -5, yend = -5)) +
  geom_segment(aes(x = 4.7, xend = 4.7, y = -5, yend = 0)) +
  geom_segment(aes(x = 8.3, xend = 8.3, y = -5, yend = 0)) +
  annotate("text", x = 6.5, y = -10, label = "NR", size = 4)

# Flip the plot
p + coord_flip()

ggsave(filename = "Ctnnd2_superplot_WFA_horizontal.png", width = 7, height = 7)

```

```{r}
# Add a new 'Condition' column to both dataframes
summary_df_WFA$Condition <- ifelse(grepl("^MD", summary_df_WFA$Group), "MD", "NR")
Image_data$Condition <- ifelse(grepl("^MD", Image_data$Group), "MD", "NR")

# Optional: Set factor levels if needed
summary_df_WFA$Condition <- factor(summary_df_WFA$Condition, levels = c("MD", "NR"))
Image_data$Condition <- factor(Image_data$Condition, levels = c("MD", "NR"))

# Now plot
p <- ggplot() +
  geom_col(data = summary_df_WFA, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +
  geom_jitter(data = Image_data, aes(x = Group, y = Red.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +
  theme_minimal() +
  theme(legend.position = "right") +
  xlab(" ") +
  ylab("WFA+ Puncta Count") +
  labs(title = "WFA+ puncta count in V1 in monocular deprived (MD) and \n normal reared (NR) animals") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = label_map2) +
  scale_y_continuous(limits = c(0, 140), expand = expansion(mult = c(0, 0.05)))+
  facet_wrap(~Condition, scales = "free_x")  # <-- This separates MD and NR into different graphs


# Remove coord_flip() if you want vertical bars
p

ggsave(filename = "Ctnnd2_superplot_WFA_vertical.png", width = 7, height = 7)

```

```         
```

#### PV DATA

```{r}
# Create summary data
summary_df_PV <- Image_data %>%
  group_by(Condition, Genotype, Side) %>%
  summarise(MeanCount = mean(Green.Puncta.Count, na.rm = TRUE), .groups = "drop") %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

# Add group label to raw data
Image_data <- Image_data %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

# Plot
ggplot() +
  # Bar chart for group means
  geom_col(data = summary_df_PV, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +

  # Jitter for individual points
  geom_jitter(data = Image_data, aes(x = Group, y = Green.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +

  theme_minimal() +
  xlab("Condition_Genotype_Side") +
  ylab("Green Puncta Count") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  scale_y_continuous(limits = c(0, 140), expand = expansion(mult = c(0, 0.05)))
```

```{r}
summary_df_PV <- Image_data %>%
  group_by(Condition, Genotype, Side) %>%
  summarise(MeanCount = mean(Green.Puncta.Count, na.rm = TRUE), .groups = "drop") %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

group_levels <- levels(factor(summary_df_PV$Group))

# Manually set bracket positions based on group order
# Assuming order is: MD_KO_Contralateral, MD_KO_Ipsilateral, MD_WT_Contralateral, MD_WT_Ipsilateral,
#                   NR_KO_Contralateral, NR_KO_Ipsilateral, NR_WT_Contralateral, NR_WT_Ipsilateral

label_map <- c(
  "MD_KO_Contralateral" = "Contralateral",
  "MD_KO_Ipsilateral" = "Ipsilateral",
  "MD_WT_Contralateral" = "Contralateral",
  "MD_WT_Ipsilateral" = "Ipsilateral",
  "NR_KO_Contralateral" = "Contralateral",
  "NR_KO_Ipsilateral" = "Ipsilateral",
  "NR_WT_Contralateral" = "Contralateral",
  "NR_WT_Ipsilateral" = "Ipsilateral"
)

p <- ggplot() +
  geom_col(data = summary_df_PV, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +
  geom_jitter(data = Image_data, aes(x = Group, y = Green.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  xlab(" ") +
  ylab("PV+ Puncta Count") +
  labs(title = "PV+ puncta count in V1 in monocular deprived (MD) \n and normal reared (NR) animals") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = label_map) +
  scale_y_continuous(limits = c(-20, 140), expand = expansion(mult = c(0, 0.05))) +  # extra room on left

  # Bracket for "MD"
  geom_segment(aes(x = 0.7, xend = 4.3, y = -5, yend = -5)) +     # horizontal bracket line
  geom_segment(aes(x = 0.7, xend = 0.7, y = -5, yend = 0)) +      # left vertical line
  geom_segment(aes(x = 4.3, xend = 4.3, y = -5, yend = 0)) +      # right vertical line
  annotate("text", x = 2.5, y = -10, label = "MD", size = 4) +    # label

  # Bracket for "NR"
  geom_segment(aes(x = 4.7, xend = 8.3, y = -5, yend = -5)) +
  geom_segment(aes(x = 4.7, xend = 4.7, y = -5, yend = 0)) +
  geom_segment(aes(x = 8.3, xend = 8.3, y = -5, yend = 0)) +
  annotate("text", x = 6.5, y = -10, label = "NR", size = 4)

# Flip the plot
p + coord_flip()



ggsave(filename = "Ctnnd2_superplot_PV_horizontal.png", width = 7, height = 7)

```

```{r}
# Add a new 'Condition' column to both dataframes
summary_df_PV$Condition <- ifelse(grepl("^MD", summary_df_PV$Group), "MD", "NR")
Image_data$Condition <- ifelse(grepl("^MD", Image_data$Group), "MD", "NR")

# Optional: Set factor levels if needed
summary_df_PV$Condition <- factor(summary_df_PV$Condition, levels = c("MD", "NR"))
Image_data$Condition <- factor(Image_data$Condition, levels = c("MD", "NR"))

# Now plot
p <- ggplot() +
  geom_col(data = summary_df_PV, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +
  geom_jitter(data = Image_data, aes(x = Group, y = Green.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +
  theme_minimal() +
  theme(legend.position = "right") +
  xlab(" ") +
  ylab("PV+ Puncta Count") +
  labs(title = "PV+ puncta count in V1 in monocular deprived (MD) and \n normal reared (NR) animals") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = label_map2) +
  scale_y_continuous(limits = c(0, 140), expand = expansion(mult = c(0, 0.05)))+
  facet_wrap(~Condition, scales = "free_x")  # <-- This separates MD and NR into different graphs
  #coord_cartesian(ylim = c(-2, max(summary_df_PV$MeanCount) * 2))

# Remove coord_flip() if you want vertical bars
p

ggsave(filename = "Ctnnd2_superplot_PV_vertical.png", width = 7, height = 7)
```

#### Coloc Data

```{r}
# Create summary data
summary_df_coloc <- Image_data %>%
  group_by(Condition, Genotype, Side) %>%
  summarise(MeanCount = mean(Colocalized.Puncta.Count, na.rm = TRUE), .groups = "drop") %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

# Add group label to raw data
Image_data <- Image_data %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

# Plot
ggplot() +
  # Bar chart for group means
  geom_col(data = summary_df_coloc, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +

  # Jitter for individual points
  geom_jitter(data = Image_data, aes(x = Group, y = Colocalized.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +

  theme_minimal() +
  xlab("Condition_Genotype_Side") +
  ylab("Colocalized Puncta Count") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  scale_y_continuous(limits = c(0, 140), expand = expansion(mult = c(0, 0.05)))
```

```{r}
summary_df_coloc <- Image_data %>%
  group_by(Condition, Genotype, Side) %>%
  summarise(MeanCount = mean(Colocalized.Puncta.Count, na.rm = TRUE), .groups = "drop") %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

group_levels <- levels(factor(summary_df_coloc$Group))

# Manually set bracket positions based on group order
# Assuming order is: MD_KO_Contralateral, MD_KO_Ipsilateral, MD_WT_Contralateral, MD_WT_Ipsilateral,
#                   NR_KO_Contralateral, NR_KO_Ipsilateral, NR_WT_Contralateral, NR_WT_Ipsilateral

label_map <- c(
  "MD_KO_Contralateral" = "Contralateral",
  "MD_KO_Ipsilateral" = "Ipsilateral",
  "MD_WT_Contralateral" = "Contralateral",
  "MD_WT_Ipsilateral" = "Ipsilateral",
  "NR_KO_Contralateral" = "Contralateral",
  "NR_KO_Ipsilateral" = "Ipsilateral",
  "NR_WT_Contralateral" = "Contralateral",
  "NR_WT_Ipsilateral" = "Ipsilateral"
)

p <- ggplot() +
  geom_col(data = summary_df_coloc, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +
  geom_jitter(data = Image_data, aes(x = Group, y = Colocalized.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  xlab(" ") +
  ylab("Colocalized Puncta Count") +
  labs(title = "Colocalized PV+ & WFA+ puncta count in V1 in monocular deprived (MD) \n and normal reared (NR) animals") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = label_map) +
  scale_y_continuous(limits = c(-20, 140), expand = expansion(mult = c(0, 0.05))) +  # extra room on left

  # Bracket for "MD"
  geom_segment(aes(x = 0.7, xend = 4.3, y = -5, yend = -5)) +     # horizontal bracket line
  geom_segment(aes(x = 0.7, xend = 0.7, y = -5, yend = 0)) +      # left vertical line
  geom_segment(aes(x = 4.3, xend = 4.3, y = -5, yend = 0)) +      # right vertical line
  annotate("text", x = 2.5, y = -10, label = "MD", size = 4) +    # label

  # Bracket for "NR"
  geom_segment(aes(x = 4.7, xend = 8.3, y = -5, yend = -5)) +
  geom_segment(aes(x = 4.7, xend = 4.7, y = -5, yend = 0)) +
  geom_segment(aes(x = 8.3, xend = 8.3, y = -5, yend = 0)) +
  annotate("text", x = 6.5, y = -10, label = "NR", size = 4)

# Flip the plot
p + coord_flip()

ggsave(filename = "Ctnnd2_superplot_coloc_horizontal.png", width = 7, height = 7)
```

```{r}
# Add a new 'Condition' column to both dataframes
summary_df_coloc$Condition <- ifelse(grepl("^MD", summary_df_coloc$Group), "MD", "NR")
Image_data$Condition <- ifelse(grepl("^MD", Image_data$Group), "MD", "NR")

# Optional: Set factor levels if needed
summary_df_coloc$Condition <- factor(summary_df_coloc$Condition, levels = c("MD", "NR"))
Image_data$Condition <- factor(Image_data$Condition, levels = c("MD", "NR"))

# Now plot
p <- ggplot() +
  geom_col(data = summary_df_coloc, aes(x = Group, y = MeanCount, fill = Genotype), alpha = 0.5) +
  geom_jitter(data = Image_data, aes(x = Group, y = Colocalized.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +
  theme_minimal() +
  theme(legend.position = "right") +
  xlab(" ") +
  ylab("Colocalized Puncta Count") +
  labs(title = "Colocalized PV+ & WFA+ puncta count in V1 in monocular deprived (MD) and \n normal reared (NR) animals") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = label_map2) +
  scale_y_continuous(limits = c(0, 140), expand = expansion(mult = c(0, 0.05)))+
  facet_wrap(~Condition, scales = "free_x")   # <-- This separates MD and NR into different graphs


# Remove coord_flip() if you want vertical bars
p

ggsave(filename = "Ctnnd2_superplot_coloc_vertical.png", width = 7, height = 7)
```

```{r}
library(dplyr)

# Add a 'NotColocalized' column and calculate percentages
Image_data <- Image_data %>%
  mutate(
    NotColocalized.Count = Green.Puncta.Count - Colocalized.Puncta.Count,
    Colocalized.Percent = Colocalized.Puncta.Count / Green.Puncta.Count,
    NotColocalized.Percent = NotColocalized.Count / Green.Puncta.Count,
    Group = paste(Condition, Genotype, Side, sep = "_")
  )

plot_data <- Image_data %>%
  select(Group, Colocalized.Percent, NotColocalized.Percent) %>%
  pivot_longer(cols = c(Colocalized.Percent, NotColocalized.Percent),
               names_to = "ColocStatus",
               values_to = "Percent")

library(ggplot2)

ggplot(plot_data, aes(x = Group, y = Percent, fill = ColocStatus)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_minimal() +
  xlab("Condition_Genotype_Side") +
  ylab("Proportion of PV Puncta") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(values = c("Colocalized.Percent" = "#1f78b4", "NotColocalized.Percent" = "#a6cee3"),
                    labels = c("Colocalized", "Not Colocalized"),
                    name = "Colocalization Status")

```

```{r}
library(dplyr)

# Add a 'NotColocalized' column and calculate percentages
Image_data <- Image_data %>%
  mutate(
    NotColocalized.Count = 
      .Puncta.Count - Colocalized.Puncta.Count,
    Colocalized.Percent = Colocalized.Puncta.Count / Red.Puncta.Count,
    NotColocalized.Percent = NotColocalized.Count / Red.Puncta.Count,
    Group = paste(Condition, Genotype, Side, sep = "_")
  )

plot_data <- Image_data %>%
  select(Group, Colocalized.Percent, NotColocalized.Percent) %>%
  pivot_longer(cols = c(Colocalized.Percent, NotColocalized.Percent),
               names_to = "ColocStatus",
               values_to = "Percent")

library(ggplot2)

ggplot(plot_data, aes(x = Group, y = Percent, fill = ColocStatus)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_minimal() +
  xlab("Condition_Genotype_Side") +
  ylab("Proportion of WFA Puncta") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(values = c("Colocalized.Percent" = "#1f78b4", "NotColocalized.Percent" = "#a6cee3"),
                    labels = c("Colocalized", "Not Colocalized"),
                    name = "Colocalization Status")
```

```{r}
# Create summary data
summary_df_coloc <- Image_data %>%
  group_by(Condition, Genotype, Side) %>%
  summarise(MeanCount = mean(Colocalized.Puncta.Count, na.rm = TRUE), .groups = "drop") %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

# Add group label to raw data
Image_data <- Image_data %>%
  mutate(Group = paste(Condition, Genotype, Side, sep = "_"))

# Plot
ggplot() +

  # Jitter for individual points
  geom_jitter(data = Image_data, aes(x = Group, y = Colocalized.Puncta.Count/Green.Puncta.Count, color = Genotype),
              width = 0.2, size = 2, alpha = 0.7) +

  theme_minimal() +
  xlab("Condition_Genotype_Side") +
  ylab("Colocalized Puncta Count") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
